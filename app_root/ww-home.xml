<?xml version="1.0" encoding="UTF-8" ?>
<messages>
    <message id="template">
        <link id="wittywizardstylesheet" href="" type="text/css" rel="stylesheet" />
        <div id="page" style="padding:10px;">
            <div id="banner_wrapper">
                <div id="banner_content">
                    <div id="banner_end">
                        <div id="banner">
                            ${banner}
                        </div>
                    </div>
                </div>
            </div>

            <div id="main_wrapper">
                <div id="main_menu">
                    ${menu}
                </div>
                <div class="clearall"></div>
            </div>

            <div id="main_content" class="panel">
                <div id="content" class="panel-body">
                    ${contents}
                </div>
            </div>

            <div id="footer_wrapper" class="panel">
                <div id="footer_content" class="panel-footer">
                    <div id="footer_copyright" style="display: inline;">
                        ${copyright}
                    </div>

                    <div id="footer_menu" style="float: right; display: inline;">
                        ${footermenu}
                    </div>

                    <div id="hitcounter">
                        ${hitcounter}
                    </div>

                    <div id="chat"></div>
                    <!-- <div id="chatscript">${chat}</div> -->
                    <!-- <script src="http://www.webtoolkit.eu/wt/examples/simplechat/chat.js?div=chat" type="text/javascript"></script> -->

                    <div class="clearall"></div>
                </div>
            </div>  <!-- id="footer_wrapper" -->
        </div> <!-- id="page" -->
        <div id="ga">
            ${ga}
        </div>
    </message> <!-- id="template" -->

    <message id="page.title">Witty Wizard, C++ Web Toolkit Content Managment System (CMS)</message>

    <message id="title">Witty Wizard</message>
    <message id="home">Home</message>
    <message id="blog">Blog</message>
    <message id="chat">Chat</message>
    <message id="video">Video</message>
    <message id="contact">Contact</message>
    <message id="about">About</message>
    <message id="language">Language</message>
    <message id="search">Search</message>
    <message id="help">Help</message>
    <message id="theme">Theme</message>

    <message id="red">Red</message>
    <message id="white">White</message>
    <message id="blue">Blue</message>
    <message id="green">Green</message>
    <message id="tan">Tan</message>
    <message id="default">Default</message>

    <message id="hits">Hits</message>
    <message id="unique-hits">Unique Hits</message>

    <message id="banner-source"></message>
    <message id="banner-alt">Witty Wizard CMS</message>
    <message id="copyright">Witty Wizard Content Management System (CMS)</message>

    <message id="home.intro">

        <h3><span>Witty Wizard: an introduction</span></h3>

        <p>
            Wt (pronounced as <i>witty</i>) is a C++ library for developing web applications.
        </p>

        <p>
            <b>Witty Wizard</b> is a project to make writing Wt Applications easier, so its not a Typical Content Managment System (CMS),
            but its much easier over all, it gives the end user something to start with and build on.
        </p>

    </message>

    <message id="home.contact">

        <p>
            Contact Form in work.
        </p>

    </message>

    <message id="home.about">

        <p>
            About Form in work.
        </p>

    </message>

    <message id="videoman">

        <p>
            Video Manager.
        </p>

    </message>

    <message id="chatter">

        <h2><span>Witty Wizard Chat client</span></h2>

        <p>This is a multi-user chat client and server.</p>

        <p>
            To keep the example simple, server and clients all run in the same process.
            Still, because all I/O in Wt is asynchronous even when using
            "server push" which requires an open connection with each client at
            all times, clients do not tie up threads, and as such the application
            could easily support thousands of simultaneous users as well.
        </p>

        <p>
            The client is contained in a widget (SimpleChatWidget), and can be
            instantiated as many times as you like, even in the same application.<br />

            Because of the widget abstraction, it is straight forward to include a
            chat client in your own application, by linking both the client and
            server classes into your application.
        </p>
    </message>

    <message id="details">

        <p>
            The implementation uses server-initiated updates, a feature that is
            not much different from regular client-server communication in Wt, and
            allows updating a session from outside its regular event loop. When a
            message is received, the user interface (i.e. widget tree) not only of
            the current session, but also of all other sessions is updated and
            "pushed" to these clients simultaneously.
        </p>

    </message>

    <message id="serverpushwarning">Note, you do not have JavaScript and this chat will have degraded functionality</message>


    <message id="videoman-template">

        <div id="videomanpagetop">
            ${videomanpagetop}
        </div>
        <div id="catcombo-0">
            ${catcombobinder-0}
        </div>
        <div id="catcombo-1">
            ${catcombobinder-1}
        </div>
        <div id="catcombo-2">
            ${catcombobinder-2}
        </div>
        <div id="catcombo-3">
            ${catcombobinder-3}
        </div>
        <div id="catcombo-4">
            ${catcombobinder-4}
        </div>
        <div id="catcombo-5">
            ${catcombobinder-5}
        </div>
        <div id="videocombo">
            ${videocombobinder}
        </div>
        <div id="videoman">
            ${videoman}
        </div>
        <div id="videomanpagebottom">
            ${videomanpagebottom}
        </div>

    </message>

</messages>
